diff --git a/tensorflow/lite/acceleration/configuration/configuration.proto b/tensorflow/lite/acceleration/configuration/configuration.proto
index 6a053fb9c37..5565569a904 100644
--- a/tensorflow/lite/acceleration/configuration/configuration.proto
+++ b/tensorflow/lite/acceleration/configuration/configuration.proto
@@ -99,6 +99,8 @@ enum Delegate {
   CORE_ML = 7;
   // Arm NN Delegate.
   ARMNN = 8;
+  // MTK Neuron Delegate.
+  NEURON = 9;
 }
 
 enum NNAPIExecutionPreference {
@@ -648,6 +650,76 @@ message ArmNNSettings {
   optional string additional_parameters = 3;
 }
 
+enum NeuronExecutionPreference {
+  NEURON_UNDEFINED = -1;
+  NEURON_LOW_POWER = 0;
+  NEURON_FAST_SINGLE_ANSWER = 1;
+  NEURON_SUSTAINED_SPEED = 2;
+  NEURON_TURBO_BOOST = 3;
+}
+enum NeuronExecutionPriority {
+  NEURON_PRIORITY_UNDEFINED = 0;
+  NEURON_PRIORITY_LOW = 90;
+  NEURON_PRIORITY_MEDIUM = 100;
+  NEURON_PRIORITY_HIGH = 110;
+}
+enum NeuronOptimizationHint {
+  NEURON_OPTIMIZATION_NONE = 0;
+  NEURON_OPTIMIZATION_LOW_LATENCY = 1;
+  NEURON_OPTIMIZATION_DEEP_FUSION = 2;
+  NEURON_OPTIMIZATION_BATCH_PROCESSOR = 4;
+}
+enum NeuronConfigMode {
+  NEURON_FREE_RUN = 0;
+  NEURON_GENERATE_MCF = 1;
+  NEURON_RUN_WITH_MCF = 2;
+};
+enum NeuronOperationCheckMode {
+  NO_OPERATION_CHECK = 0;
+  PER_NODE_OPERATION_CHECK = 1;
+  PRE_OPERATION_CHECK = 2;
+};
+message NeuronDelegateSettings {
+  // Default execution_preference = NEURON_FAST_SINGLE_ANSWE
+  optional NeuronExecutionPreference execution_preference = 1;
+  // Default execution_priority = NEURON_PRIORITY_HIGH
+  optional NeuronExecutionPriority execution_priority = 2;
+  // Default optimization_hint = NEURON_OPTIMIZATION_DEFAULT
+  optional NeuronOptimizationHint optimization_hint = 3;
+  // Default allow_fp16 = false
+  optional bool allow_fp16 = 4;
+  // Additional system performance boost time
+  // Default boost_duration = 0
+  optional int32 boost_duration = 5;
+  // The nul-terminated cache dir.
+  // Default to nullptr, which implies the Neuron will not t
+  // compilation.
+  optional string cache_dir = 6;
+  // The unique nul-terminated token string.
+  // Default to nullptr, which implies the Neuron will not t
+  // compilation. It is the caller's responsibility to ensur
+  // clash of the tokens.
+  // NOTE: when using compilation caching, it is not recomme
+  // same delegate instance for multiple models.
+  optional string model_token = 7;
+  // Whether to use ahwb
+  optional bool use_ahwb = 8;
+  // Whether to use cacheable ahwb
+  optional bool use_cacheable_buffer = 9;
+  // Set compile options
+  optional string compile_options = 10;
+  // Set target device
+  optional string accelerator_name = 11;
+  // Mode of MCF
+  optional NeuronConfigMode neuron_config_mode = 12;
+  // Path of mcf
+  optional string neuron_config_path = 13;
+  // User-defined item
+  optional string neuron_config_item = 14;
+  // Whether to use supported operation check or not.
+  optional NeuronOperationCheckMode operation_check_mode = 15;
+}
+
 // How to configure TFLite.
 message TFLiteSettings {
   // Which delegate to use.
@@ -705,6 +777,9 @@ message TFLiteSettings {
 
   // For configuring the Arm NN delegate.
   optional ArmNNSettings armnn_settings = 16;
+
+  // Neuron delegate settings.
+  optional NeuronDelegateSettings neuron_delegate_settings = 17;
 }
 
 // Whether to automatically fallback to TFLite CPU path on delegation errors.
