From 569a21e88b60d7009f2ed5ba7e7b9f5e49e637ea Mon Sep 17 00:00:00 2001
From: Julien STEPHAN <jstephan@baylibre.com>
Date: Wed, 2 Dec 2020 11:39:11 +0000
Subject: [PATCH 2/2] nnapi: add Makefiles

The Makefiles are based on file nn/BUILD.gn

Signed-off-by: Julien STEPHAN <jstephan@baylibre.com>
---
 Makefile                  | 37 ++++++++++++++++
 nn/common/Makefile        | 90 +++++++++++++++++++++++++++++++++++++++
 nn/driver/sample/Makefile | 17 ++++++++
 nn/runtime/Makefile       | 24 +++++++++++
 4 files changed, 168 insertions(+)
 create mode 100644 Makefile
 create mode 100644 nn/common/Makefile
 create mode 100644 nn/driver/sample/Makefile
 create mode 100644 nn/runtime/Makefile

diff --git a/Makefile b/Makefile
new file mode 100644
index 000000000..9b17b0d8a
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,37 @@
+ROOT_DIR = $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
+LIBDIR ?= /usr/lib/
+INCLUDEDIR ?= /usr/include/
+
+TARGET = libneuralnetworks.so
+
+OUT=$(ROOT_DIR)/out
+export OUT ROOT_DIR
+
+FLAGS := -Wall -Werror -Wextra -std=c++17 -fPIC -fvisibility=default -Wno-inconsistent-missing-override -Wno-sign-compare -Wl,--no-as-needed -Wl,--no-undefined
+
+DEFINES = -D __ANDROID_API__=30 -D __ANDROID_API_O_MR1__=27 -D __ANDROID_API_P__=28 -D __ANDROID_API_Q__=29 -D __ANDROID_API_R__=30 -D __ANDROID_API_FUTURE__=10000 -D NNAPI_CHROMEOS -D TF_LITE_DISABLE_X86_NEON -D NN_INCLUDE_CPU_IMPLEMENTATION
+
+INCLUDES = -I $(LIBTEXTCLASSIFIER_INCLUDE) -I $(EIGEN_INCLUDE) -I $(GEMMLOWP_INCLUDE) -I $(AOSP_INCLUDE) -I $(ROOT_DIR)/nn/chromeos/includes -I $(ROOT_DIR)/nn/common/ -I $(ROOT_DIR)/nn/common/include -I $(ROOT_DIR)/nn/common/random
+
+CPPFLAGS := $(DEFINES) $(FLAGS) $(INCLUDES)
+export CPPFLAGS
+
+SUBDIRS := nn/common nn/runtime
+
+.PHONY : all clean install $(SUBDIRS)
+
+all : $(TARGET)
+
+$(TARGET): $(SUBDIRS)
+	$(CC) -o $(OUT)/$(TARGET) -Wl,--whole-archive $(OUT)/libruntime.a -Wl,--no-whole-archive -shared -lvendor-nn-hal -L $(OUT) -lnn-common
+
+$(SUBDIRS):
+	mkdir -p $(OUT)
+	$(MAKE) -C $@ $(MAKECMDGOALS)
+
+install:
+	mkdir -p $(DESTDIR)/$(LIBDIR)/
+	cp $(OUT)/*.so $(DESTDIR)/$(LIBDIR)/
+
+clean: $(SUBDIRS)
+	rm -rf $(OUT)/$(TARGET)
diff --git a/nn/common/Makefile b/nn/common/Makefile
new file mode 100644
index 000000000..2031aec7e
--- /dev/null
+++ b/nn/common/Makefile
@@ -0,0 +1,90 @@
+SRC := BufferTracker.cpp \
+	CpuExecutor.cpp \
+	ExecutionBurstController.cpp \
+	ExecutionBurstServer.cpp \
+	GraphDump.cpp \
+	IndexedShapeWrapper.cpp \
+	MemoryUtils.cpp \
+	MetaModel.cpp \
+	OperationResolver.cpp \
+	OperationsUtils.cpp \
+	QuantUtils.cpp \
+	TokenHasher.cpp \
+	Utils.cpp \
+	ValidateHal.cpp \
+	operations/Activation.cpp \
+	operations/ArgMinMax.cpp \
+	operations/BidirectionalSequenceLSTM.cpp \
+	operations/BidirectionalSequenceRNN.cpp \
+	operations/Broadcast.cpp \
+	operations/Cast.cpp \
+	operations/ChannelShuffle.cpp \
+	operations/Comparisons.cpp \
+	operations/Concatenation.cpp \
+	operations/Conv2D.cpp \
+	operations/DepthwiseConv2D.cpp \
+	operations/Dequantize.cpp \
+	operations/Elementwise.cpp \
+	operations/Elu.cpp \
+	operations/EmbeddingLookup.cpp \
+	operations/ExpandDims.cpp \
+	operations/Fill.cpp \
+	operations/FullyConnected.cpp \
+	operations/Gather.cpp \
+	operations/GenerateProposals.cpp \
+	operations/GroupedConv2D.cpp \
+	operations/HashtableLookup.cpp \
+	operations/HeatmapMaxKeypoint.cpp \
+	operations/InstanceNormalization.cpp \
+	operations/L2Normalization.cpp \
+	operations/LocalResponseNormalization.cpp \
+	operations/LogicalAndOr.cpp \
+	operations/LogicalNot.cpp \
+	operations/LogSoftmax.cpp \
+	operations/LSHProjection.cpp \
+	operations/LSTM.cpp \
+	operations/MaximumMinimum.cpp \
+	operations/Multinomial.cpp \
+	operations/Neg.cpp \
+	operations/Pooling.cpp \
+	operations/Pow.cpp \
+	operations/PRelu.cpp \
+	operations/QLSTM.cpp \
+	operations/Quantize.cpp \
+	operations/QuantizedLSTM.cpp \
+	operations/Rank.cpp \
+	operations/Reduce.cpp \
+	operations/Reshape.cpp \
+	operations/ResizeImageOps.cpp \
+	operations/RNN.cpp \
+	operations/RoiAlign.cpp \
+	operations/RoiPooling.cpp \
+	operations/Select.cpp \
+	operations/SimpleMath.cpp \
+	operations/Slice.cpp \
+	operations/Softmax.cpp \
+	operations/Split.cpp \
+	operations/Squeeze.cpp \
+	operations/StridedSlice.cpp \
+	operations/SVDF.cpp \
+	operations/Tile.cpp \
+	operations/TopK_V2.cpp \
+	operations/TransposeConv2D.cpp \
+	operations/Transpose.cpp \
+	operations/UnidirectionalSequenceLSTM.cpp \
+	operations/UnidirectionalSequenceRNN.cpp \
+	random/guarded_philox_random.cc \
+	random/random.cc \
+	random/simple_philox.cc
+
+TMP_OBJECTS := $(SRC:.cpp=.o)
+OBJECTS := $(TMP_OBJECTS:.cc=.o)
+TARGET := $(OUT)/libnn-common.so
+
+CPPFLAGS += -I $(ROOT_DIR)/nn/runtime/include -Wno-unused-parameter -Wno-unused-variable -Wno-deprecated-copy -Wno-unreachable-code-return
+
+$(TARGET): $(OBJECTS)
+	$(CC) $^ -shared -lrt -lpthread -ltensorflowlite -lnnapi-support -o $(TARGET)
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
diff --git a/nn/driver/sample/Makefile b/nn/driver/sample/Makefile
new file mode 100644
index 000000000..c37cbc3fd
--- /dev/null
+++ b/nn/driver/sample/Makefile
@@ -0,0 +1,17 @@
+SRC := $(ROOT_DIR)/nn/chromeos/sampledriver.cpp \
+	SampleDriver.cpp \
+   	SampleDriverFull.cpp \
+	SampleDriverMinimal.cpp \
+	SampleDriverPartial.cpp \
+	SampleDriverUtils.cpp
+
+OBJECTS := $(SRC:.cpp=.o)
+TARGET := $(OUT)/libnn_hal.a
+
+CPPFLAGS += -I $(ROOT_DIR)/nn/runtime/include -I $(ROOT_DIR)/nn/driver/sample
+
+$(TARGET): $(OBJECTS)
+	$(AR) rcs $@ $^
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
diff --git a/nn/runtime/Makefile b/nn/runtime/Makefile
new file mode 100644
index 000000000..6219ac948
--- /dev/null
+++ b/nn/runtime/Makefile
@@ -0,0 +1,24 @@
+SRC := BurstBuilder.cpp \
+	Callbacks.cpp \
+	CompilationBuilder.cpp \
+	ExecutionBuilder.cpp \
+	ExecutionPlan.cpp \
+	Manager.cpp \
+	Memory.cpp \
+	ModelArgumentInfo.cpp \
+	ModelBuilder.cpp \
+	NeuralNetworks.cpp \
+	TypeManager.cpp \
+	VersionedInterfaces.cpp \
+	$(ROOT_DIR)/nn/chromeos/versioned_drivers.cpp
+
+OBJECTS := $(SRC:.cpp=.o)
+TARGET := $(OUT)/libruntime.a
+
+CPPFLAGS += -I $(ROOT_DIR)/nn/common/include -I $(ROOT_DIR)/nn/driver/sample -I $(ROOT_DIR)/nn/runtime/include -Wno-unused-parameter
+
+$(TARGET): $(OBJECTS)
+	$(AR) rcs $@ $^
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
-- 
2.17.1

