From 3843de0cfa8a0f4f6a78adca3bc11a5ef921680d Mon Sep 17 00:00:00 2001
From: Julien STEPHAN <jstephan@baylibre.com>
Date: Wed, 9 Sep 2020 13:54:04 +0200
Subject: [PATCH 2/2] libnnapi-support: add Makefile

Signed-off-by: Julien STEPHAN <jstephan@baylibre.com>
---
 Makefile                       | 61 ++++++++++++++++++++++++++++++++++
 nnapi/hardware_buffer/Makefile | 10 ++++++
 nnapi/native/Makefile          | 10 ++++++
 nnapi/neuralnetworks/Makefile  | 12 +++++++
 4 files changed, 93 insertions(+)
 create mode 100644 Makefile
 create mode 100644 nnapi/hardware_buffer/Makefile
 create mode 100644 nnapi/native/Makefile
 create mode 100644 nnapi/neuralnetworks/Makefile

diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000000..4df1abe6e3
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,61 @@
+ROOT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
+LIBDIR ?= /usr/lib/
+INCLUDEDIR ?= /usr/include/
+
+TARGET := libnnapi-support.so
+OUT := $(ROOT_DIR)/out
+export OUT
+
+LIBBASE_SRC := $(ROOT_DIR)/aosp_libs/libbase
+LIBCUTILS_SRC := $(ROOT_DIR)/aosp_libs/libcutils
+LIBFMQ_SRC := $(ROOT_DIR)/aosp_libs/libfmq
+LIBHIDL_SRC := $(ROOT_DIR)/aosp_libs/libhidl
+LIBLOG_SRC := $(ROOT_DIR)/aosp_libs/logging/liblog
+LIBUTILS_SRC := $(ROOT_DIR)/aosp_libs/libutils
+LIBHWBUF_SRC := $(ROOT_DIR)/nnapi/hardware_buffer
+LIBNATIVE_SRC := $(ROOT_DIR)/aosp_libs/libnative
+NATIVEWINDOW_SRC := $(LIBNATIVE_SRC)/libs/nativewindow
+ARECT_SRC := $(LIBNATIVE_SRC)/libs/arect
+NEURALNETWORK_SRC := $(ROOT_DIR)/nnapi/neuralnetworks
+NATIVE_SRC := $(ROOT_DIR)/nnapi/native
+NNAPI_SRC := $(ROOT_DIR)/nnapi
+SUBDIRS := $(LIBBASE_SRC) $(LIBCUTILS_SRC) $(LIBFMQ_SRC) $(LIBHIDL_SRC) $(LIBLOG_SRC) $(LIBUTILS_SRC) $(LIBHWBUF_SRC) $(NATIVE_SRC) $(NEURALNETWORK_SRC)
+export LIBNATIVE_SRC LIBHIDL_SRC NNAPI_SRC
+
+DEFINES = -D__ANDROID_API__=30
+FLAGS = -Wall -Werror -Wextra -Wno-attributes -std=c++17 -fPIC -fvisibility=default -Wno-error=final-dtor-non-final-class -Wno-error=c99-designator
+INCLUDES = -I $(NNAPI_SRC)/includes -I $(LIBBASE_SRC)/include -I $(LIBCUTILS_SRC)/include -I $(LIBLOG_SRC)/include -I $(LIBUTILS_SRC)/include -I $(LIBNATIVE_SRC)/include -I $(NATIVEWINDOW_SRC)/include  -I $(ARECT_SRC)/include -I $(LIBFMQ_SRC)/base
+CPPFLAGS = $(DEFINES )$(FLAGS) $(INCLUDES)
+export CPPFLAGS
+
+.PHONY: all clean install $(SUBDIRS)
+
+all: $(TARGET)
+
+$(TARGET): $(SUBDIRS)
+	$(CC) -Wl,--whole-archive $(OUT)/libbase.a $(OUT)/libcutils.a $(OUT)/libhidl.a $(OUT)/libhwbuf.a $(OUT)/liblog.a $(OUT)/libnative.a $(OUT)/libutils.a $(OUT)/libneuralnetworks.a $(OUT)/libfmq.a -Wl,--no-whole-archive -shared -o $(OUT)/$@
+	#$(CC) -shared -L$(OUT) -lbase -lcutils -lhidl -lhwbuf -llog -lnative -lutils -lneuralnetworks -lfmq -o $(OUT)/$@
+
+$(SUBDIRS):
+	mkdir -p $(OUT)
+	$(MAKE) -C $@ $(MAKECMDGOALS)
+
+install:
+	mkdir -p $(DESTDIR)/$(INCLUDEDIR)/aosp
+	cp -r $(NNAPI_SRC)/includes/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(ARECT_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(NATIVEWINDOW_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBCUTILS_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBLOG_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBUTILS_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBBASE_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBFMQ_SRC)/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBFMQ_SRC)/base/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBHIDL_SRC)/base/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	cp -r $(LIBHIDL_SRC)/libhidlmemory/include/* $(DESTDIR)/$(INCLUDEDIR)/aosp/
+	mkdir -p ${DESTDIR}/$(INCLUDEDIR)/aosp/android
+	cp $(LIBNATIVE_SRC)/include/android/sharedmem.h $(DESTDIR)/$(INCLUDEDIR)/aosp/android/
+	mkdir -p $(DESTDIR)/$(LIBDIR)/
+	cp $(OUT)/$(TARGET) $(DESTDIR)/$(LIBDIR)/
+
+clean: $(SUBDIRS)
+	rm -rf $(OUT)/$(TARGET)
diff --git a/nnapi/hardware_buffer/Makefile b/nnapi/hardware_buffer/Makefile
new file mode 100644
index 0000000000..11bd48bbe6
--- /dev/null
+++ b/nnapi/hardware_buffer/Makefile
@@ -0,0 +1,10 @@
+SRC := AHardwareBuffer.cpp
+
+OBJECTS := $(SRC:.cpp=.o)
+TARGET := $(OUT)/libhwbuf.a
+
+$(TARGET): $(OBJECTS)
+	$(AR) rcs $@ $^
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
diff --git a/nnapi/native/Makefile b/nnapi/native/Makefile
new file mode 100644
index 0000000000..733755789c
--- /dev/null
+++ b/nnapi/native/Makefile
@@ -0,0 +1,10 @@
+SRC := shared_memory.cpp
+
+OBJECTS := $(SRC:.cpp=.o)
+TARGET := $(OUT)/libnative.a
+
+$(TARGET): $(OBJECTS)
+	$(AR) rcs $@ $^
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
diff --git a/nnapi/neuralnetworks/Makefile b/nnapi/neuralnetworks/Makefile
new file mode 100644
index 0000000000..447bb668b2
--- /dev/null
+++ b/nnapi/neuralnetworks/Makefile
@@ -0,0 +1,12 @@
+SRC := 1.0/ADevice.cpp 1.0/AExecutionCallback.cpp 1.0/APreparedModel.cpp 1.0/APreparedModelCallback.cpp 1.0/Device.cpp 1.0/ExecutionCallback.cpp 1.0/PreparedModel.cpp 1.0/PreparedModelCallback.cpp 1.1/ADevice.cpp 1.1/Device.cpp 1.2/ABurstCallback.cpp 1.2/ABurstContext.cpp 1.2/ADevice.cpp 1.2/AExecutionCallback.cpp 1.2/APreparedModel.cpp 1.2/APreparedModelCallback.cpp 1.2/BurstCallback.cpp 1.2/BurstContext.cpp 1.2/Device.cpp 1.2/ExecutionCallback.cpp 1.2/PreparedModel.cpp 1.2/PreparedModelCallback.cpp 1.2/types.cpp 1.3/ABuffer.cpp 1.3/ADevice.cpp 1.3/AExecutionCallback.cpp 1.3/AFencedExecutionCallback.cpp 1.3/APreparedModel.cpp 1.3/APreparedModelCallback.cpp 1.3/Buffer.cpp 1.3/Device.cpp 1.3/ExecutionCallback.cpp 1.3/FencedExecutionCallback.cpp 1.3/PreparedModel.cpp 1.3/PreparedModelCallback.cpp 1.3/types.cpp
+
+CPPFLAGS += -I $(LIBNATIVE_SRC)/include -I $(LIBHIDL_SRC)/adapter/include -I $(LIBHIDL_SRC)/transport/include -I $(LIBHIDL_SRC)/base/include -Wno-inconsistent-missing-override
+
+OBJECTS := $(SRC:.cpp=.o)
+TARGET := $(OUT)/libneuralnetworks.a
+
+$(TARGET): $(OBJECTS)
+	$(AR) rcs $@ $^
+
+clean:
+	rm -rf $(OBJECTS) $(TARGET)
-- 
2.30.0

