From 25e62ecbd735c7d7a4402dc8170cc3a63b47cac1 Mon Sep 17 00:00:00 2001
From: Julien STEPHAN <jstephan@baylibre.com>
Date: Tue, 26 Jan 2021 14:26:17 +0000
Subject: [PATCH] xtensa-ann: fix compilation issues

fix some minor compilation issues mostly to support compiling for linux
system instead of android

Signed-off-by: Julien STEPHAN <jstephan@baylibre.com>
---
 xtensa_driver/XtensaDriver.h                        | 1 -
 xtensa_driver/XtensaExecutor.cpp                    | 4 ++--
 xtensa_driver/XtensaExecutor.h                      | 4 ++--
 xtensa_driver/operations/include/ann_v1_1_prepare.h | 1 -
 xtensa_driver/operations/include/flk_common.h       | 1 +
 xtensa_driver/operations/src/QuantizedLSTM.cpp      | 2 +-
 xtensa_driver/operations/src/enhancedLSTM.cpp       | 3 ++-
 7 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/xtensa_driver/XtensaDriver.h b/xtensa_driver/XtensaDriver.h
index a3d994c..51cd9e2 100644
--- a/xtensa_driver/XtensaDriver.h
+++ b/xtensa_driver/XtensaDriver.h
@@ -10,7 +10,6 @@
 #ifndef ANDROID_ML_NN_XTENSA_DRIVER_XTENSA_DRIVER_H
 #define ANDROID_ML_NN_XTENSA_DRIVER_XTENSA_DRIVER_H
 
-#include <android/api-level.h>
 #include "ExecutionBurstServer.h"
 #include "HalInterfaces.h"
 #include "OperationResolver.h"
diff --git a/xtensa_driver/XtensaExecutor.cpp b/xtensa_driver/XtensaExecutor.cpp
index 0e82dcb..9d949e0 100644
--- a/xtensa_driver/XtensaExecutor.cpp
+++ b/xtensa_driver/XtensaExecutor.cpp
@@ -2039,7 +2039,7 @@ void XtensaExecutor::copyQuantization(Subgraph& subgraph, uint32_t dst, uint32_t
 // Utility functions
 
 bool CheckConst(const Subgraph& subgraph,
-                const std::vector<const std::tuple<const uint32_t, 
+                const std::vector<std::tuple<const uint32_t,
                                                    OperandType>>& lst) {
     for (const auto& it : lst) {
         const Operand& opnd = subgraph.operands[std::get<0>(it)];
@@ -2052,7 +2052,7 @@ bool CheckConst(const Subgraph& subgraph,
 }
 
 bool CheckConstCopy(const Subgraph& subgraph,
-                    const std::vector<const std::tuple<const uint32_t, 
+                    const std::vector<std::tuple<const uint32_t,
                                                        OperandType>>& lst) {
 #if 0
     -- Google note about CONSTANT_REFERENCE (8/17/2020):
diff --git a/xtensa_driver/XtensaExecutor.h b/xtensa_driver/XtensaExecutor.h
index 706bb85..f0b5b87 100644
--- a/xtensa_driver/XtensaExecutor.h
+++ b/xtensa_driver/XtensaExecutor.h
@@ -428,8 +428,8 @@ public:
 // Utility functions for checking model operand type and life time.
 // Tuple contains model operand index and expected operand type.
 
-bool CheckConst(const Subgraph& subgraph, const std::vector<const std::tuple<const uint32_t, OperandType>>& lst);
-bool CheckConstCopy(const Subgraph& subgraph, const std::vector<const std::tuple<const uint32_t, OperandType>>& lst);
+bool CheckConst(const Subgraph& subgraph, const std::vector<std::tuple<const uint32_t, OperandType>>& lst);
+bool CheckConstCopy(const Subgraph& subgraph, const std::vector<std::tuple<const uint32_t, OperandType>>& lst);
 
 template <typename T>
 static const T GetScalarData(const Model& model, const Subgraph& subgraph, const uint32_t opndIdx,
diff --git a/xtensa_driver/operations/include/ann_v1_1_prepare.h b/xtensa_driver/operations/include/ann_v1_1_prepare.h
index ce1df6c..dc42111 100644
--- a/xtensa_driver/operations/include/ann_v1_1_prepare.h
+++ b/xtensa_driver/operations/include/ann_v1_1_prepare.h
@@ -17,7 +17,6 @@
 #ifndef ANN_V1_1_PREPARE_H
 #define ANN_V1_1_PREPARE_H
 
-#include <android/api-level.h>
 #include <flk_common.h>
 
 #if defined(__cplusplus) && defined(__ANDROID__)
diff --git a/xtensa_driver/operations/include/flk_common.h b/xtensa_driver/operations/include/flk_common.h
index 292f5c4..ab3c28c 100644
--- a/xtensa_driver/operations/include/flk_common.h
+++ b/xtensa_driver/operations/include/flk_common.h
@@ -13,6 +13,7 @@
 
 #include <stddef.h>
 #include <stdint.h>
+#include <mutex>
 
 #include "XtensaOp.h"
 
diff --git a/xtensa_driver/operations/src/QuantizedLSTM.cpp b/xtensa_driver/operations/src/QuantizedLSTM.cpp
index 8da0fdc..27c568b 100644
--- a/xtensa_driver/operations/src/QuantizedLSTM.cpp
+++ b/xtensa_driver/operations/src/QuantizedLSTM.cpp
@@ -16,7 +16,7 @@
 #ifdef __ANDROID__
 
 #include "ann_v1_1_prepare.h"
-#include "../../../frameworks/ml/nn/common/operations/QuantizedLSTM.h"
+#include "nn/common/operations/QuantizedLSTM.h"
 #include <android-base/logging.h>
 
 namespace android {
diff --git a/xtensa_driver/operations/src/enhancedLSTM.cpp b/xtensa_driver/operations/src/enhancedLSTM.cpp
index 39a1504..b97f153 100644
--- a/xtensa_driver/operations/src/enhancedLSTM.cpp
+++ b/xtensa_driver/operations/src/enhancedLSTM.cpp
@@ -15,6 +15,7 @@
 #include <iostream>
 #include <cstring>
 #include <algorithm>
+#include <math.h>
 
 #define OEM_OFFSET     1
 #define MAX_TILE_SIZE  64000
@@ -320,7 +321,7 @@ int32_t CheckedLog2(const float x, int* log2_result)
   const float x_log2_fracpart = x_log2 - x_log2_rounded;
 
   *log2_result = (int) (x_log2_rounded);
-  if (!(std::fabsf(x_log2_fracpart) < 1e-3))
+  if (!(fabsf(x_log2_fracpart) < 1e-3))
   {
     return(-1);
   }
