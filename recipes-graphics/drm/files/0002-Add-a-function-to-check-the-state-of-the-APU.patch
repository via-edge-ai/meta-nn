From ed80b2ab895544abb09f32129628662ff4f430f1 Mon Sep 17 00:00:00 2001
From: Alexandre Bailon <abailon@baylibre.com>
Date: Tue, 8 Jun 2021 10:45:26 +0200
Subject: [PATCH 2/4] Add a function to check the state of the APU

The driver creates the device before that the firmware is loaded
so we must check that the firmware is loaded and the APU is operational
before trying to use it.

Signed-off-by: Alexandre Bailon <abailon@baylibre.com>
---
 apu/apu_drm.c   | 15 +++++++++++++++
 apu/apu_drm.h   | 14 +++++++++++++-
 apu/apu_drmif.h |  1 +
 3 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/apu/apu_drm.c b/apu/apu_drm.c
index 1dae0e4c..00ea6b9c 100644
--- a/apu/apu_drm.c
+++ b/apu/apu_drm.c
@@ -623,3 +623,18 @@ int apu_dequeue_result(struct apu_drm_job *job, uint16_t *result,
 
 	return 0;	
 }
+
+drm_public int apu_device_online(struct apu_drm_device *dev)
+{
+	int ret;
+
+	struct drm_apu_state req = {
+		.device = dev->device_id,
+	};
+
+	ret = drmCommandWriteRead(dev->fd, DRM_APU_STATE, &req, sizeof(req));
+	if (ret)
+		return ret;
+
+	return req.flags & APU_ONLINE;
+}
diff --git a/apu/apu_drm.h b/apu/apu_drm.h
index ccb4d426..52d83705 100644
--- a/apu/apu_drm.h
+++ b/apu/apu_drm.h
@@ -69,23 +69,35 @@ struct drm_apu_gem_iommu_map {
 	uint64_t bo_device_addresses;
 };
 
+
 struct apu_job_event {
         struct drm_event base;
         uint32_t out_sync;
 };
 
+#define APU_ONLINE		1
+#define APU_CRASHED		2
+#define APU_TIMEDOUT		4
+
+struct drm_apu_state {
+	uint32_t device;
+	uint32_t flags;
+};
+
 #define DRM_APU_GEM_NEW			0x00
 #define DRM_APU_GEM_QUEUE		0x01
 #define DRM_APU_GEM_DEQUEUE		0x02
 #define DRM_APU_GEM_IOMMU_MAP		0x03
 #define DRM_APU_GEM_IOMMU_UNMAP		0x04
-#define DRM_APU_NUM_IOCTLS		0x05
+#define DRM_APU_STATE			0x05
+#define DRM_APU_NUM_IOCTLS		0x06
 
 #define DRM_IOCTL_APU_GEM_NEW		DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_GEM_NEW, struct drm_apu_gem_new)
 #define DRM_IOCTL_APU_GEM_QUEUE		DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_GEM_QUEUE, struct drm_apu_gem_queue)
 #define DRM_IOCTL_APU_GEM_DEQUEUE	DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_GEM_DEQUEUE, struct drm_apu_gem_dequeue)
 #define DRM_IOCTL_APU_GEM_IOMMU_MAP	DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_GEM_IOMMU_MAP, struct drm_apu_gem_iommu_map)
 #define DRM_IOCTL_APU_GEM_IOMMU_UNMAP	DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_GEM_IOMMU_UNMAP, struct drm_apu_gem_iommu_map)
+#define DRM_IOCTL_APU_STATE		DRM_IOWR(DRM_COMMAND_BASE + DRM_APU_STATE, struct drm_apu_state)
 
 #if defined(__cplusplus)
 }
diff --git a/apu/apu_drmif.h b/apu/apu_drmif.h
index 71926750..3d79a6d6 100644
--- a/apu/apu_drmif.h
+++ b/apu/apu_drmif.h
@@ -69,5 +69,6 @@ int apu_bo_iommu_map(struct apu_drm_device *dev,
 int apu_bo_iommu_unmap(
 		struct apu_drm_device *dev,
 		struct apu_bo **bos, uint32_t count);
+int apu_device_online(struct apu_drm_device *dev);
 
 #endif /* APU_DRMIF_H_ */
-- 
2.33.0

