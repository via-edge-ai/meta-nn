From 91a120bc5d43ae059d61b03e14893f111e02577b Mon Sep 17 00:00:00 2001
From: "kidd-kw.chen" <kidd-kw.chen@mediatek.com>
Date: Fri, 9 Jun 2023 14:51:34 +0800
Subject: [PATCH] nnstreamer: Add custom property:debug to print inference time

Signed-off-by: kidd-kw.chen <kidd-kw.chen@mediatek.com>
---
 .../tensor_filter_tensorflow_lite.cc          | 21 +++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/ext/nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.cc b/ext/nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.cc
index f8cd6ed7..07dc9f41 100644
--- a/ext/nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.cc
+++ b/ext/nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.cc
@@ -127,6 +127,7 @@ typedef struct {
   gint num_threads; /**< the number of threads */
   const gchar *ext_delegate_path; /**< path to external delegate lib */
   GHashTable *ext_delegate_kv_table; /**< external delegate key values options */
+  int debug_level;
 } tflite_option_s;
 
 /**
@@ -209,6 +210,10 @@ class TFLiteInterpreter
     return delegate_ptr.get ();
   }
 
+  void setDebug(int level) {
+	debug_level = level;
+  }
+
   private:
   GMutex mutex;
   char *model_path;
@@ -216,7 +221,7 @@ class TFLiteInterpreter
   bool is_xnnpack_delegated; /**< To check if XNNPACK delegate is used */
   char *ext_delegate_path; /**< path to external delegate lib */
   GHashTable *ext_delegate_kv_table; /**< external delegate key values options */
-
+  int debug_level;
   std::unique_ptr<tflite::Interpreter> interpreter;
   std::unique_ptr<tflite::FlatBufferModel> model;
 
@@ -258,6 +263,7 @@ class TFLiteCore
   friend void replace_interpreter (void *instance, void *interperter);
 
   private:
+  int debug_level;
   int num_threads;
   accl_hw accelerator;
   tflite_delegate_e delegate;
@@ -289,6 +295,7 @@ TFLiteInterpreter::TFLiteInterpreter ()
   model_path = nullptr;
   ext_delegate_path = nullptr;
   ext_delegate_kv_table = nullptr;
+  debug_level = 0;
 
   g_mutex_init (&mutex);
 
@@ -373,15 +380,15 @@ TFLiteInterpreter::invoke (const GstTensorMemory *input, GstTensorMemory *output
   tflite_internal_stats.total_invoke_latency += stop_time - start_time;
   tflite_internal_stats.total_invoke_num += 1;
 
-#if (DBG)
-  ml_logi ("Invoke() is finished: %" G_GINT64_FORMAT "ms, model path: %s",
+  if (debug_level > 0)
+    ml_logw ("Invoke() is finished: %" G_GINT64_FORMAT "ms, model path: %s",
       (stop_time - start_time) / 1000, getModelPath ());
+  if (debug_level > 1)
   ml_logi ("%" G_GINT64_FORMAT " invoke average %" G_GINT64_FORMAT
            ", total overhead %" G_GINT64_FORMAT,
       tflite_internal_stats.total_invoke_num,
       (tflite_internal_stats.total_invoke_latency / tflite_internal_stats.total_invoke_num),
       tflite_internal_stats.total_overhead_latency);
-#endif
 
   if (status != kTfLiteOk) {
     ml_loge ("Failed to invoke");
@@ -847,6 +854,7 @@ fail_exit:
  */
 TFLiteCore::TFLiteCore (const GstTensorFilterProperties *prop)
 {
+  debug_level = 0;
   num_threads = -1;
   accelerator = ACCL_NONE;
   delegate = TFLITE_DELEGATE_NONE;
@@ -972,6 +980,7 @@ TFLiteCore::init (tflite_option_s *option)
   interpreter->setModelPath (option->model_file);
   interpreter->setExtDelegate (option->ext_delegate_path, option->ext_delegate_kv_table);
   num_threads = option->num_threads;
+  debug_level = option->debug_level;
   int err;
 
   setAccelerator (option->accelerators, option->delegate);
@@ -1228,6 +1237,7 @@ TFLiteCore::invoke (const GstTensorMemory *input, GstTensorMemory *output)
   int err;
 
   interpreter->lock ();
+  interpreter->setDebug(debug_level);
   err = interpreter->invoke (input, output);
   interpreter->unlock ();
 
@@ -1262,6 +1272,7 @@ tflite_parseCustomOption (const GstTensorFilterProperties *prop, tflite_option_s
   option->accelerators = prop->accl_str;
   option->delegate = TFLITE_DELEGATE_NONE;
   option->num_threads = -1;
+  option->debug_level = 0;
   option->ext_delegate_path = nullptr;
   option->ext_delegate_kv_table = nullptr;
 
@@ -1317,6 +1328,8 @@ tflite_parseCustomOption (const GstTensorFilterProperties *prop, tflite_option_s
             g_strfreev (kv);
           }
           g_strfreev (kvpairs);
+        } else if (g_ascii_strcasecmp (pair[0], "debug") == 0) {
+			option->debug_level = 1;
         } else {
           ml_logw ("Unknown option (%s).", strv[i]);
         }
-- 
2.18.0

